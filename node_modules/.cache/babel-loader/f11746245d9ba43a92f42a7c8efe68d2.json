{"ast":null,"code":"var _jsxFileName = \"/Users/riya/Downloads/VSCode Projects/graphql_practice/client/src/components/LoginPage/LoginPage.jsx\";\nimport React from 'react';\nimport firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport \"firebase/firestore\";\nimport { useAuthState } from 'react-firebase-hooks/auth';\nimport { useCollectionData } from 'react-firebase-hooks/firestore';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst path = require('path');\n\nrequire('dotenv').config({\n  path: path.resolve(__dirname, '../.env')\n});\n\nrequire('dotenv').config({\n  path: __dirname + '../../../.env'\n});\n\nconst LoginPage = () => {\n  var firebaseConfig = {\n    apiKey: process.env.API_KEY,\n    authDomain: process.env.AUTH_DOMAIN,\n    projectId: process.env.PROJECT_ID,\n    storageBucket: process.env.STORAGE_BUCKET,\n    messagingSenderId: process.env.MESSAGING_SENDING_ID,\n    appId: process.env.APP_ID,\n    measurementId: process.env.MEASUREMENT_ID\n  };\n\n  if (!firebase.apps.length) {\n    firebase.initializeApp(firebaseConfig);\n  } else {\n    firebase.app(); // if already initialized, use that one\n  }\n\n  console.log(firebaseConfig.projectId); //  const auth = firebase.auth();\n  //  const firestore = firebase.firestore();\n  // const SignIn = () => {\n  //     const signInWithGoogle = () => {\n  //         const provider = new firebase.auth.GoogleAuthProvider();\n  //         auth.signInWithPopup(provider);\n  //     }\n  //     return(\n  //         <button onClick={signInWithGoogle}>Sign in with Google</button>\n  //     )\n  // }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"asdfasdfasdfsas hi\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 9\n  }, this);\n};\n\n_c = LoginPage;\nexport default LoginPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"LoginPage\");","map":{"version":3,"sources":["/Users/riya/Downloads/VSCode Projects/graphql_practice/client/src/components/LoginPage/LoginPage.jsx"],"names":["React","firebase","useAuthState","useCollectionData","path","require","config","resolve","__dirname","LoginPage","firebaseConfig","apiKey","process","env","API_KEY","authDomain","AUTH_DOMAIN","projectId","PROJECT_ID","storageBucket","STORAGE_BUCKET","messagingSenderId","MESSAGING_SENDING_ID","appId","APP_ID","measurementId","MEASUREMENT_ID","apps","length","initializeApp","app","console","log"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,cAArB;AACA,OAAO,eAAP;AACA,OAAO,oBAAP;AACA,SAASC,YAAT,QAA6B,2BAA7B;AACA,SAASC,iBAAT,QAAkC,gCAAlC;;;AACA,MAAMC,IAAI,GAAGC,OAAO,CAAC,MAAD,CAApB;;AACAA,OAAO,CAAC,QAAD,CAAP,CAAkBC,MAAlB,CAAyB;AAAEF,EAAAA,IAAI,EAAEA,IAAI,CAACG,OAAL,CAAaC,SAAb,EAAwB,SAAxB;AAAR,CAAzB;;AACAH,OAAO,CAAC,QAAD,CAAP,CAAkBC,MAAlB,CAAyB;AAACF,EAAAA,IAAI,EAACI,SAAS,GAAC;AAAhB,CAAzB;;AAEA,MAAMC,SAAS,GAAG,MAAM;AACpB,MAAIC,cAAc,GAAG;AACjBC,IAAAA,MAAM,EAAEC,OAAO,CAACC,GAAR,CAAYC,OADH;AAEjBC,IAAAA,UAAU,EAAEH,OAAO,CAACC,GAAR,CAAYG,WAFP;AAGjBC,IAAAA,SAAS,EAAEL,OAAO,CAACC,GAAR,CAAYK,UAHN;AAIjBC,IAAAA,aAAa,EAAEP,OAAO,CAACC,GAAR,CAAYO,cAJV;AAKjBC,IAAAA,iBAAiB,EAAET,OAAO,CAACC,GAAR,CAAYS,oBALd;AAMjBC,IAAAA,KAAK,EAAEX,OAAO,CAACC,GAAR,CAAYW,MANF;AAOjBC,IAAAA,aAAa,EAAEb,OAAO,CAACC,GAAR,CAAYa;AAPV,GAArB;;AAUA,MAAI,CAACzB,QAAQ,CAAC0B,IAAT,CAAcC,MAAnB,EAA2B;AACvB3B,IAAAA,QAAQ,CAAC4B,aAAT,CAAuBnB,cAAvB;AACF,GAFF,MAEO;AACHT,IAAAA,QAAQ,CAAC6B,GAAT,GADG,CACa;AAClB;;AAEDC,EAAAA,OAAO,CAACC,GAAR,CAAYtB,cAAc,CAACO,SAA3B,EAjBmB,CAkBpB;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;;AAEA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAMH,CAtCD;;KAAMR,S;AAwCN,eAAeA,SAAf","sourcesContent":["import React from 'react'\nimport firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport \"firebase/firestore\";\nimport { useAuthState } from 'react-firebase-hooks/auth';\nimport { useCollectionData } from 'react-firebase-hooks/firestore';\nconst path = require('path')\nrequire('dotenv').config({ path: path.resolve(__dirname, '../.env') })\nrequire('dotenv').config({path:__dirname+'../../../.env'})\n\nconst LoginPage = () => {\n    var firebaseConfig = {\n        apiKey: process.env.API_KEY,\n        authDomain: process.env.AUTH_DOMAIN,\n        projectId: process.env.PROJECT_ID,\n        storageBucket: process.env.STORAGE_BUCKET,\n        messagingSenderId: process.env.MESSAGING_SENDING_ID,\n        appId: process.env.APP_ID,\n        measurementId: process.env.MEASUREMENT_ID,\n    };\n\n    if (!firebase.apps.length) {\n        firebase.initializeApp(firebaseConfig);\n     }else {\n        firebase.app(); // if already initialized, use that one\n     }\n\n     console.log(firebaseConfig.projectId)\n    //  const auth = firebase.auth();\n    //  const firestore = firebase.firestore();\n\n    // const SignIn = () => {\n    //     const signInWithGoogle = () => {\n    //         const provider = new firebase.auth.GoogleAuthProvider();\n    //         auth.signInWithPopup(provider);\n    //     }\n        \n    //     return(\n    //         <button onClick={signInWithGoogle}>Sign in with Google</button>\n    //     )\n    // }\n\n    return (\n        <div>\n       asdfasdfasdfsas hi\n            {/* <SignIn /> */}\n        </div>\n    )\n}\n\nexport default LoginPage"]},"metadata":{},"sourceType":"module"}