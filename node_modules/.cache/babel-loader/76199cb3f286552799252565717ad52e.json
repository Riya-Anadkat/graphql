{"ast":null,"code":"var _jsxFileName = \"/Users/riya/Downloads/VSCode Projects/graphql_practice/client/src/components/LoginPage/LoginPage.jsx\";\nimport React from 'react'; // import firebase from \"firebase/app\";\n// import \"firebase/auth\";\n// import \"firebase/firestore\";\n// import { useAuthState } from 'react-firebase-hooks/auth';\n// import { useCollectionData } from 'react-firebase-hooks/firestore';\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst LoginPage = () => {\n  // var firebaseConfig = {\n  //     apiKey: process.env.API_KEY,\n  //     authDomain: process.env.AUTH_DOMAIN,\n  //     projectId: process.env.PROJECT_ID,\n  //     storageBucket: process.env.STORAGE_BUCKET,\n  //     messagingSenderId: process.env.MESSAGING_SENDING_ID,\n  //     appId: process.env.APP_ID,\n  //     measurementId: process.env.MEASUREMENT_ID,\n  // };\n  // if (!firebase.apps.length) {\n  //     firebase.initializeApp(firebaseConfig);\n  //  }else {\n  //     firebase.app(); // if already initialized, use that one\n  //  }\n  //  const auth = firebase.auth();\n  //  const firestore = firebase.firestore();\n  // const SignIn = () => {\n  //     const signInWithGoogle = () => {\n  //         const provider = new firebase.auth.GoogleAuthProvider();\n  //         auth.signInWithPopup(provider);\n  //     }\n  //     return(\n  //         <button onClick={signInWithGoogle}>Sign in with Google</button>\n  //     )\n  // }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"asdfasdfasdfsas hi\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 9\n  }, this);\n};\n\n_c = LoginPage;\nexport default LoginPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"LoginPage\");","map":{"version":3,"sources":["/Users/riya/Downloads/VSCode Projects/graphql_practice/client/src/components/LoginPage/LoginPage.jsx"],"names":["React","LoginPage"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CACA;AACA;AACA;AAEA;AACA;;;;AAEA,MAAMC,SAAS,GAAG,MAAM;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAMH,CApCD;;KAAMA,S;AAsCN,eAAeA,SAAf","sourcesContent":["import React from 'react'\n// import firebase from \"firebase/app\";\n// import \"firebase/auth\";\n// import \"firebase/firestore\";\n\n// import { useAuthState } from 'react-firebase-hooks/auth';\n// import { useCollectionData } from 'react-firebase-hooks/firestore';\n\nconst LoginPage = () => {\n    // var firebaseConfig = {\n    //     apiKey: process.env.API_KEY,\n    //     authDomain: process.env.AUTH_DOMAIN,\n    //     projectId: process.env.PROJECT_ID,\n    //     storageBucket: process.env.STORAGE_BUCKET,\n    //     messagingSenderId: process.env.MESSAGING_SENDING_ID,\n    //     appId: process.env.APP_ID,\n    //     measurementId: process.env.MEASUREMENT_ID,\n    // };\n\n    // if (!firebase.apps.length) {\n    //     firebase.initializeApp(firebaseConfig);\n    //  }else {\n    //     firebase.app(); // if already initialized, use that one\n    //  }\n    //  const auth = firebase.auth();\n    //  const firestore = firebase.firestore();\n\n    // const SignIn = () => {\n    //     const signInWithGoogle = () => {\n    //         const provider = new firebase.auth.GoogleAuthProvider();\n    //         auth.signInWithPopup(provider);\n    //     }\n        \n    //     return(\n    //         <button onClick={signInWithGoogle}>Sign in with Google</button>\n    //     )\n    // }\n\n    return (\n        <div>\n       asdfasdfasdfsas hi\n            {/* <SignIn /> */}\n        </div>\n    )\n}\n\nexport default LoginPage"]},"metadata":{},"sourceType":"module"}