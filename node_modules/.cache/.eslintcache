[{"/Users/riya/Downloads/VSCode Projects/graphql_practice/client/src/index.js":"1","/Users/riya/Downloads/VSCode Projects/graphql_practice/client/src/App.js":"2","/Users/riya/Downloads/VSCode Projects/graphql_practice/client/src/reportWebVitals.js":"3","/Users/riya/Downloads/VSCode Projects/graphql_practice/client/src/components/TopicPage/TopicPage.jsx":"4","/Users/riya/Downloads/VSCode Projects/graphql_practice/client/src/components/LoginPage/LoginPage.jsx":"5"},{"size":544,"mtime":1629856521954,"results":"6","hashOfConfig":"7"},{"size":625,"mtime":1629911999070,"results":"8","hashOfConfig":"7"},{"size":362,"mtime":1628043466175,"results":"9","hashOfConfig":"7"},{"size":2205,"mtime":1629604075548,"results":"10","hashOfConfig":"7"},{"size":2817,"mtime":1629913207343,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"1hc073w",{"filePath":"15","messages":"16","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"17","usedDeprecatedRules":"14"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"20","messages":"21","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22","usedDeprecatedRules":"14"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/riya/Downloads/VSCode Projects/graphql_practice/client/src/index.js",[],["25","26"],"/Users/riya/Downloads/VSCode Projects/graphql_practice/client/src/App.js",["27"],"import logo from './logo.svg';\nimport './App.css';\nimport TopicPage from './components/TopicPage/TopicPage';\nimport LoginPage from './components/LoginPage/LoginPage';\nimport {\n  BrowserRouter,\n  Switch,\n  Route,\n} from 'react-router-dom';\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <Switch>\n        <div>\n        <LoginPage />\n        <Route exact path='/threads'>\n          <div> threads</div>\n          {/* <TheadsPage /> */}\n        </Route>\n        <Route exact path='/threads/:topicId'>\n          <TopicPage />\n        </Route>\n        </div>\n      </Switch>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","/Users/riya/Downloads/VSCode Projects/graphql_practice/client/src/reportWebVitals.js",[],"/Users/riya/Downloads/VSCode Projects/graphql_practice/client/src/components/TopicPage/TopicPage.jsx",["28","29","30","31"],"import React, {useState} from 'react'\nimport { useQuery, gql, useMutation } from '@apollo/client';\nimport './styles.css'\n\nconst TopicPage = () => {\n    const [ commentValue , setCommentValue ] = useState(\"\");\n\n    const { data, loading, error } = useQuery(gql`\n        query getComment($id: ID!){\n            getComment(id: $id){\n                comment\n            }\n    }`,{variables: {\n        id: \"2\"\n    }})\n    const { data: commentsData, refetch} = useQuery(gql`\n    query getComments{\n        getComments {\n            author\n            comment\n            id\n        }\n    }`,{variables: {\n\n    }})\n    const [mutateFunction] = useMutation(gql`\n        mutation createComment($comment: String,  $author: String){\n            createComment(commentInput: {comment: $comment, author: $author}){\n                author\n                comment\n            }\n    }`)\n\n    const [deleteCommentFunction, {data: deleteCommentData}] = useMutation(gql`\n        mutation deleteComment($id: ID!){\n            deleteComment(id: $id)\n        }\n    `)\n\n    const handleMutate = () => {\n        mutateFunction({variables: {\n            comment: commentValue,\n            author: \"Anonymous user\"\n        }})\n        setCommentValue(\"\")\n        refetch();\n    }\n\n    const handleTextChange = ({ target: { value } }) => {\n        setCommentValue(value)\n    };\n\n    const handleDeleteComment = (id) => {\n        deleteCommentFunction({variables: {\n            id: id\n        }});\n        refetch();\n    }\n\n   const DisplayComments = () => {\n    return (\n       <div>\n            {commentsData?.getComments.map((commentData) => (\n                <div>\n                <h5><button onClick={() => handleDeleteComment(commentData.id)}>delete</button></h5>\n                <h5> {commentData.author}: </h5>\n                <h5> {commentData.comment}</h5>\n                </div>\n            ))}\n       </div>\n       )\n    }\n     \n    return (\n        <div>\n            <h2>Comments</h2>\n            <input type=\"text\" value={commentValue} onChange={handleTextChange}></input>\n            <button onClick={handleMutate}> Add comment</button>\n            <DisplayComments />\n        </div>\n    )\n}\n\nexport default TopicPage\n","/Users/riya/Downloads/VSCode Projects/graphql_practice/client/src/components/LoginPage/LoginPage.jsx",["32","33"],{"ruleId":"34","replacedBy":"35"},{"ruleId":"36","replacedBy":"37"},{"ruleId":"38","severity":1,"message":"39","line":1,"column":8,"nodeType":"40","messageId":"41","endLine":1,"endColumn":12},{"ruleId":"38","severity":1,"message":"42","line":8,"column":13,"nodeType":"40","messageId":"41","endLine":8,"endColumn":17},{"ruleId":"38","severity":1,"message":"43","line":8,"column":19,"nodeType":"40","messageId":"41","endLine":8,"endColumn":26},{"ruleId":"38","severity":1,"message":"44","line":8,"column":28,"nodeType":"40","messageId":"41","endLine":8,"endColumn":33},{"ruleId":"38","severity":1,"message":"45","line":34,"column":42,"nodeType":"40","messageId":"41","endLine":34,"endColumn":59},{"ruleId":"38","severity":1,"message":"46","line":6,"column":10,"nodeType":"40","messageId":"41","endLine":6,"endColumn":27},{"ruleId":"38","severity":1,"message":"47","line":34,"column":11,"nodeType":"40","messageId":"41","endLine":34,"endColumn":20},"no-native-reassign",["48"],"no-negated-in-lhs",["49"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'data' is assigned a value but never used.","'loading' is assigned a value but never used.","'error' is assigned a value but never used.","'deleteCommentData' is assigned a value but never used.","'useCollectionData' is defined but never used.","'firestore' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]